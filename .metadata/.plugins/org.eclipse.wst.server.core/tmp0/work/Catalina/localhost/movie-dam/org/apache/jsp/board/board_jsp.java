/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2018-09-15 14:22:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import moviedam.board.ArticleDBBean;
import moviedam.board.ArticleDataBean;
import moviedam.board.CommentDBBean;
import moviedam.board.CommentDataBean;
import java.util.List;
import java.text.SimpleDateFormat;

public final class board_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


    int pageSize = 10;
    SimpleDateFormat sdf = 
        new SimpleDateFormat("yyyy-MM-dd HH:mm");

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("moviedam.board.CommentDataBean");
    _jspx_imports_classes.add("moviedam.board.CommentDBBean");
    _jspx_imports_classes.add("moviedam.board.ArticleDataBean");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("moviedam.board.ArticleDBBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    String id = request.getParameter("id");
      id = (String)session.getAttribute("id");
      String select = request.getParameter("select");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");
	String title = "게시판변경";
	
    String pageNum = request.getParameter("pageNum");
    String option = request.getParameter("option");
    
    String search = request.getParameter("search");
   

    if (pageNum == null) {
        pageNum = "1";
    }

    int currentPage = Integer.parseInt(pageNum);
    int startRow = (currentPage - 1) * pageSize + 1;
    int endRow = currentPage * pageSize;
    int count = 0;
    int ccount =0;
    int number = 0;
    int total_page = 0;
    List<ArticleDataBean> articleList = null; 
    
    ArticleDBBean dbPro = ArticleDBBean.getInstance();
    count = dbPro.getArticleCount(option,search); //전체 글 수
    
    CommentDBBean dbPro2 = CommentDBBean.getInstance();
    ccount = dbPro.getCommentCount();
    
    
    if (count > 0) {
        articleList = dbPro.getArticles(startRow, pageSize,option,search);
    }
    
    
	
	number = count-(currentPage-1)*pageSize;
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>    \r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/cban/assets/bootstrap-4.1.0/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");

   try{
	   if(id==null || id.equals("")){

      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"list_serch form-inline\" align=\"center\">\r\n");
      out.write("    \t<form>\r\n");
      out.write("        <select class=\"form-control\" name=\"option\">\r\n");
      out.write("\t        <option value=\"all\">전체글</option>\r\n");
      out.write("\t        <option value=\"subject\">제목</option>\r\n");
      out.write("\t        <option value=\"content\">내용</option>\r\n");
      out.write("\t        <option value=\"writer\">작성자</option>\r\n");
      out.write("        </select>\r\n");
      out.write("            <input class=\"form-control\" type=\"text\" name=\"search\" size=30\" placeholder=\"궁금한 것을 검색해보세요\" aria-label=\"Search\">&nbsp;\r\n");
      out.write("            <input class=\"btn btn-outline-secondary\" type=\"submit\" value=\"검색\"/> \r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");

   }else{

      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"list_serch form-inline\" align=\"center\">\r\n");
      out.write("    \t<form>\r\n");
      out.write("        <select class=\"form-control\" name=\"option\">\r\n");
      out.write("\t        <option value=\"all\">전체글</option>\r\n");
      out.write("\t        <option value=\"subject\">제목</option>\r\n");
      out.write("\t        <option value=\"content\">내용</option>\r\n");
      out.write("\t        <option value=\"writer\">작성자</option>\r\n");
      out.write("        </select>\r\n");
      out.write("            <input class=\"form-control\" type=\"text\" name=\"search\" size=30\" placeholder=\"궁금한 것을 검색해보세요\">&nbsp;\r\n");
      out.write("            <input class=\"btn btn-outline-secondary\" type=\"submit\" value=\"검색\"/> \r\n");
      out.write("        </form>   \r\n");
      out.write("    </div>  \r\n");
      out.write("    \r\n");
 
   }
   }catch(Exception e){
	e.printStackTrace();
}

      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<input class=\"btn btn-outline-secondary\" type=\"submit\" value=\"전체\"/>\r\n");
      out.write("<input class=\"btn btn-outline-secondary\" type=\"submit\" value=\"사담\"/>\r\n");
      out.write("<input class=\"btn btn-outline-secondary\" type=\"submit\" value=\"예고편\"/>\r\n");
      out.write("<input class=\"btn btn-outline-secondary\" type=\"submit\" value=\"포스터\"/>\r\n");
      out.write("<input class=\"btn btn-outline-secondary\" type=\"submit\" value=\"영화감상문\"/>\r\n");
      out.write("<input class=\"btn btn-outline-secondary\" type=\"submit\" value=\"스포일러\"/>\r\n");
      out.write("<div align=\"center\"><i class=\"fas fa-list\"></i> 글목록(전체 글:");
      out.print(count);
      out.write(")</div>\r\n");
      out.write("\r\n");
      out.write("<div align=\"right\">\r\n");
      out.write("<a class=\"btn btn-sm btn-outline-secondary\" href=\"writeForm.jsp\" role=\"button\" ><i class=\"fas fa-edit\"></i>질문하기</a>\r\n");
      out.write("</div>\r\n");
 if (count == 0) { 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"alert alert-danger\" role=\"alert\">\r\n");
      out.write("  게시판에 저장된 글이 없습니다.\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
 } else {
      out.write("\r\n");
      out.write("<table class=\"table table-bordered table-hover\">\r\n");
      out.write("\t<colgroup>\r\n");
      out.write("\t\t<col width=\"8%\">\r\n");
      out.write("\t\t<col width=\"8%\">\r\n");
      out.write("\t\t<col width=\"*\">\r\n");
      out.write("\t\t<col width=\"10%\">\r\n");
      out.write("\t\t<col width=\"20%\">\r\n");
      out.write("\t\t<col width=\"8%\">\r\n");
      out.write("\t\t<col width=\"8%\">\r\n");
      out.write("\t\t<col width=\"8%\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t</colgroup>\r\n");
      out.write("\t<thead >\r\n");
      out.write("\t    <tr>\r\n");
      out.write("\t      <th scope=\"col\">번호</th>\r\n");
      out.write("\t      <th scope=\"col\">분류</th>\r\n");
      out.write("\t      <th scope=\"col\">제목</th>\r\n");
      out.write("\t      <th scope=\"col\">작성자</th>\r\n");
      out.write("\t      <th scope=\"col\">작성일</th>\r\n");
      out.write("\t      <th scope=\"col\">댓글수</th>\r\n");
      out.write("\t      <th scope=\"col\">추천수</th>\r\n");
      out.write("\t      <th scope=\"col\">조회수</th>\r\n");
      out.write("\t      \r\n");
      out.write("\t    </tr>\r\n");
      out.write("\t  </thead>\r\n");
      out.write("\t  <tbody>\r\n");
  
	int a = count / pageSize + (count % pageSize == 0 ? 0 : 1); //전체페이지 수 
	
	if(Integer.parseInt(pageNum) > a){ 
      out.write("\r\n");
      out.write("\t\t");
      if (true) {
        _jspx_page_context.forward("error.jsp");
        return;
      }
      out.write('\r');
      out.write('\n');
      out.write('	');
 }
	
   for (int i = 0 ; i < articleList.size() ; i++) {
	   ArticleDataBean article = articleList.get(i);

      out.write("\r\n");
      out.write("   <tr>\r\n");
      out.write("    <td> ");
      out.print(number--);
      out.write("</td>\r\n");
      out.write("    <td> ");
      out.print(select);
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("           \r\n");
      out.write("      <a href=\"content.jsp?num=");
      out.print(article.getArticle_id());
      out.write("&pageNum=");
      out.print(currentPage);
      out.write("\">\r\n");
      out.write("           ");
      out.print(article.getArticle_title());
      out.write("</a> \r\n");
 if(article.getArticle_gets()>=20){
      out.write("\r\n");
      out.write("         <span class=\"badge badge-danger\">N</span>");
}
      out.write(" </td>\r\n");
      out.write("    <td> \r\n");
      out.write("       ");
      out.print(article.getArticle_writer());
      out.write("</a></td>\r\n");
      out.write("    <td class=\"text-center\">");
      out.print(sdf.format(article.getReg_date()));
      out.write("</td>\r\n");
      out.write("     <td class=\"text-center\">");
      out.print(ccount);
      out.write("</td>\r\n");
      out.write("      <td class=\"text-center\">a</td>\r\n");
      out.write("    <td class=\"text-right\">");
      out.print(article.getArticle_gets());
      out.write("</td>\r\n");
      out.write("    \r\n");
      out.write("  </tr>\r\n");
}
      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
}
      out.write("\r\n");
      out.write("\r\n");
      out.write("<nav aria-label=\"Page navigation\">\r\n");
      out.write("  <ul class=\"pagination justify-content-center\">\r\n");

    if (count > 0) {
    	//전체 페이지수 구하기//50개=>5페이지, 51~59개=>6페이지
        int pageCount = count / pageSize + (count % pageSize == 0 ? 0 : 1);
        
    	if(pageCount < currentPage){
    		currentPage = pageCount;
    	}
       //한 페이지에 보여지는 시작페이지 구하기
		int startPage =1;
		
		if(currentPage % 10 != 0)
           startPage = (int)(currentPage/10)*10 + 1;
		else
           startPage = ((int)(currentPage/10)-1)*10 + 1; 
           
        int pageBlock = 10; //한 페이지에 보여줄 페이지수 설정
        
		//한 페이지에 보여지는 끝페이지 구하기
		int endPage = startPage + pageBlock - 1;
        if (endPage > pageCount) {
        	endPage = pageCount; 
        } 
        
        
        if (startPage > 10) { 
      out.write("\r\n");
      out.write("    \t<li class=\"page-item\"><a class=\"page-link\" href=\"board.jsp?pageNum=");
      out.print(startPage - 10 );
      out.write("\">이전</a></li>\r\n");
      }
    
    for (int i = startPage ; i <= endPage ; i++) {
    	if(i == currentPage) {

      out.write("\r\n");
      out.write("\t\t<li class=\"page-item active\">\r\n");
      out.write("\t      <a class=\"page-link\" href=\"board.jsp?pageNum=");
      out.print(i );
      out.write('"');
      out.write('>');
      out.print(i );
      out.write(" <span class=\"sr-only\">(current)</span></a>\r\n");
      out.write("\t    </li>\r\n");
        		
    	} else {

      out.write("\t\r\n");
      out.write("\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"board.jsp?pageNum=");
      out.print(i );
      out.write('"');
      out.write('>');
      out.print(i );
      out.write("</a></li>\r\n");
        		
    	}
  }
    
    if (endPage < pageCount) {  
      out.write("\r\n");
      out.write("    <li class=\"page-item\"><a class=\"page-link\" href=\"board.jsp?pageNum=");
      out.print(startPage + 10 );
      out.write("\">다음</a></li>\r\n");

    }
}

      out.write("\r\n");
      out.write("\t</ul>\r\n");
      out.write("</nav>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"/cban/assets/bootstrap-4.1.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"/cban/assets/fontawesome-free-5.0.9/svg-with-js/js/fontawesome-all.js\"></script>\r\n");
      out.write("<script src=\"/cban/assets/script.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
