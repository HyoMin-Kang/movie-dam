/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2018-09-13 10:40:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class insertMemberForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>    \r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<title>영화담</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>  \r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\t<div class=\"page-header\">\r\n");
      out.write("\t    <h1> 회원가입폼</h1>\r\n");
      out.write("\t    <h4> 아래의 항목을 입력하세요.</h4>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<form name=\"insertMember\" method=\"post\" action=\"insertMemberPro.jsp\" onsubmit=\"return formSubmit();\">\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t<label for=\"inputId\" class=\"col-sm-offset-2 col-sm-2 col-xs-9 control-label\">아이디</label>\r\n");
      out.write("\t\t\t<div class=\"col-sm-4 col-xs-9\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"mem_userid\" placeholder=\"아이디를 입력하세요.\" required=\"required\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group row\">\r\n");
      out.write("            <label for=\"inputPasswd\" class=\"col-sm-offset-2 col-sm-2 col-xs-9 control-label\">비밀번호</label>\r\n");
      out.write("            <div class=\"col-sm-4 col-xs-9\">\r\n");
      out.write("                <input type=\"password\" class=\"form-control\" id=\"inputPasswd\" name=\"mem_pwd\" placeholder=\"비밀번호를 입력하세요.\" required=\"required\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group row\">\r\n");
      out.write("            <label for=\"inputName\"  class=\"col-sm-offset-2 col-sm-2 col-xs-9 control-label\">이름</label>\r\n");
      out.write("            <div class=\"col-sm-4 col-xs-9\">\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"inputName\" name=\"mem_name\" placeholder=\"이름을 입력하세요.\" required=\"required\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("            <label for=\"inputNickName\" class=\"col-sm-offset-2 col-sm-2 col-xs-9 control-label\">닉네임</label>\r\n");
      out.write("            <div class=\"col-sm-4 col-xs-9\">\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"inputNickName\" name=\"mem_nickname\" placeholder=\"닉네임을 입력하세요.\" required=\"required\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("            <label for=\"inputEmail\" class=\"col-sm-offset-2 col-sm-2 col-xs-9 control-label\">이메일</label>\r\n");
      out.write("            <div class=\"col-sm-4 col-xs-9\">\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"inputEmail\" name=\"mem_email\" placeholder=\"movie@example.com\" required=\"required\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group row\">\r\n");
      out.write("            <label for=\"inputBirth\" class=\"col-sm-offset-2 col-sm-2 col-xs-9 control-label\">생일</label>\r\n");
      out.write("            <div class=\"col-sm-4 col-xs-9\">\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"inputBirth\" name=\"mem_birth\" placeholder=\"YYYY-MM-DD\" required=\"required\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"form-group row\">\r\n");
      out.write("            <label for=\"inputGender\" class=\"col-sm-offset-2 col-sm-2 col-xs-9 control-label\">성별</label>\r\n");
      out.write("            <div class=\"col-sm-4 col-xs-9\">\r\n");
      out.write("\t\t\t\t<label class=\"radio-inline\">\r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" id=\"inputGender\" name=\"mem_gender\" value=\"0\" required=\"required\"> 남\r\n");
      out.write("\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t<label class=\"radio-inline\">\r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" id=\"inputGender\" name=\"mem_gender\" value=\"1\" required=\"required\"> 여\r\n");
      out.write("\t\t\t\t</label>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("            <label for=\"inputAddress\" class=\"col-sm-offset-2 col-sm-2 col-xs-9 control-label\">주소</label>\r\n");
      out.write("\t\t\t<div class=\"col-sm-4 col-xs-9\">\r\n");
      out.write("                <div class=\"input-group mb-3\">\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"inputPostcode\" name=\"mem_postcode\" placeholder=\"Postcode\" readonly=\"readonly\">\r\n");
      out.write("                    <div class=\"input-group-append\">\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-outline-secondary\" onclick=\"execDaumPostcode()\">우편번호 찾기</button>\r\n");
      out.write("            \t\t</div>\r\n");
      out.write("        \t\t</div>\r\n");
      out.write("        \t\t<input type=\"text\" class=\"form-control\" id=\"inputAddress\" name=\"mem_address\" placeholder=\"(상세주소를 입력하세요.)\" required=\"required\">\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 이용약관-->\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t<label for=\"terms\" class=\"col-sm-offset-2 col-sm-2 col-xs-9 control-label\">이용약관</label>\r\n");
      out.write("            <div class=\"col-sm-6 col-xs-10\">\r\n");
      out.write("\t\t\t\t<textarea class=\"form-control\" text-align=\"right\" rows=5 readonly=\"readonly\">\r\n");
      out.write("  \t\t\t\t개인정보 수집 및 이용 동의 ㈜LG유플러스(이하 ‘회사’라 함)는 전자금융거래법 및 동법 시행령 상의 제반 사항, 전자상거래 등에서의 소비자보호에 관한 법률 및 전자상거래 등에서의 소비자보호 지침, 정보통신망 이용촉진 및 정보보호 등에 관한 법률 법률 제22조(개인정보의 수집 이용 동의 등) 및 개인정보보호법 제15조(개인정보의 수집 이용)에 의해 통신과금/전자금융서비스 이용자(이하 “이용자”라 합니다)로부터 아래와 같이 개인정보를 수집 및 이용합니다. 1. 수집하는 개인정보의 항목 가. 회사는 회원가입, 상담, 서비스 신청 등을 위해 아래와 같은 개인정보를 수집하고 있습니다. - 이름, 생년월일, 전화번호, 휴대폰번호, 이메일, 사용자 IP Address, 쿠키, 서비스 이용기록, 결제기록, 결제정보, 정산계좌정보, 주소 등 나. “결제정보”라 함은 ”이용자”가 고객사의 상품 및 서비스를 구매하기 위하여 “회사”가 제공하는 ‘서비스’를 통해 제시한 각 결제수단 별 제반 정보를 의미하며 신용카드 번호, 신용카드 유효기간, 성명, 계좌번호, 주민등록번호, 휴대폰번호, 유선전화번호, 상품권번호 등을 말합니다. 다. 회사는 서비스 이용과 관련한 대금결제, 물품배송 및 환불 등에 필요한 정보를 추가로 수집할 수 있습니다. 2. 개인정보의 수집 및 이용 목적 가. 회사는 다음과 같은 목적 하에 “결제서비스”와 관련한 개인정보를 수집합니다. - 사고 및 리스크 관리, 통계 활용, 결제결과 통보\r\n");
      out.write("\t\t\t\t</textarea>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<p class=\"col-sm-offset-4 col-sm-6 col-xs-12 control-label\">\r\n");
      out.write("\t\t\t\t<span>개인정보 수집 및 이용에 동의하십니까? </span>\r\n");
      out.write("\t\t\t\t<label class=\"checkbox-inline\">\r\n");
      out.write("\t\t\t\t\t<input type=\"checkbox\" name=\"terms\" value=\"Agree\" required=\"required\">동의함\r\n");
      out.write("\t\t\t\t</label> \r\n");
      out.write("\t\t\t\t</p>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t<label class=\"col-sm-offset-2 col-sm-2 col-xs-9 control-label\">자동 가입 방지</label>\r\n");
      out.write("\t\t\t<div class=\"col-sm-6 col-xs-10\">\r\n");
      out.write("\t\t\t\t<div id=\"html_element\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<div class=\"col-sm-offset-4 col-sm-2 col-xs-4\">\r\n");
      out.write("\t\t\t\t<button type=\"submit\" id=\"checkId\" class=\"btn btn-default btn-block\">회원가입하기</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-sm-2 col-xs-4\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-block\" onclick=\"goMain()\">취소</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- address api -->\r\n");
      out.write("<script src=\"http://dmaps.daum.net/map_js_init/postcode.v2.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("function execDaumPostcode() {\r\n");
      out.write("    new daum.Postcode({\r\n");
      out.write("        oncomplete: function(data) {\r\n");
      out.write("            // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("\r\n");
      out.write("            // 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n");
      out.write("            // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("            var fullAddr = ''; // 최종 주소 변수\r\n");
      out.write("            var extraAddr = ''; // 조합형 주소 변수\r\n");
      out.write("\r\n");
      out.write("            // 사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n");
      out.write("            if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n");
      out.write("                fullAddr = data.roadAddress;\r\n");
      out.write("\r\n");
      out.write("            } else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n");
      out.write("                fullAddr = data.jibunAddress;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 사용자가 선택한 주소가 도로명 타입일때 조합한다.\r\n");
      out.write("            if(data.userSelectedType === 'R'){\r\n");
      out.write("                //법정동명이 있을 경우 추가한다.\r\n");
      out.write("                if(data.bname !== ''){\r\n");
      out.write("                    extraAddr += data.bname;\r\n");
      out.write("                }\r\n");
      out.write("                // 건물명이 있을 경우 추가한다.\r\n");
      out.write("                if(data.buildingName !== ''){\r\n");
      out.write("                    extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("                }\r\n");
      out.write("                // 조합형주소의 유무에 따라 양쪽에 괄호를 추가하여 최종 주소를 만든다.\r\n");
      out.write("                fullAddr += (extraAddr !== '' ? ' ('+ extraAddr +')' : '');\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("            document.getElementById('inputPostcode').value = data.zonecode; //5자리 새우편번호 사용\r\n");
      out.write("            document.getElementById('inputAddress').value = fullAddr;\r\n");
      out.write("            // 커서를 상세주소 필드로 이동한다.\r\n");
      out.write("            document.getElementById('inputAddress').focus();\r\n");
      out.write("        }\r\n");
      out.write("    }).open();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- reCaptcha -->\r\n");
      out.write("<script src='https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit' async defer></script>\r\n");
      out.write("<script>\r\n");
      out.write("var onloadCallback = function() {\r\n");
      out.write("    grecaptcha.render('html_element', {\r\n");
      out.write("          'sitekey' : '6Ldu9VUUAAAAANn65F6UQgOt0cO2R9oTchhjmiJi'\r\n");
      out.write("    });\r\n");
      out.write("};\r\n");
      out.write("var onReturnCallback = function() {\r\n");
      out.write("    var url = 'https://www.google.com/recaptcha/api/siteverify';\r\n");
      out.write("};\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("//빈 칸 확인\r\n");
      out.write("function formSubmit() {\r\n");
      out.write("    if (grecaptcha.getResponse() == '') {\r\n");
      out.write("        alert('자동 가입 방지 체크를 확인해주세요.');\r\n");
      out.write("        return false;\r\n");
      out.write("    } else {\r\n");
      out.write("        return true;\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("</script> \r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function confirmId(id) {\r\n");
      out.write("    if(id.value.length==0) {\r\n");
      out.write("        alert('아이디를 입력해 주세요.');\r\n");
      out.write("        inputId.focus();\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    //중복 확인 새창\r\n");
      out.write("    url = 'idCheck.jsp?id=' + id.value;\r\n");
      out.write("    open(url, 'ID 중복 체크', 'height=200, width=320, menubar=no, scrollbars=no, toolbar=no, location=no, status=no, resizable=no');\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script> \r\n");
      out.write("function checkValue() {\r\n");
      out.write("\tif(insertMember.passwd.value == \"\") {\r\n");
      out.write("        alert(\"비밀번호를 입력해주세요.\");\r\n");
      out.write("        insertMember.passwd.focus();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t} else if(insertMember.name.value == \"\") {\r\n");
      out.write("        alert(\"이름을 입력해주세요.\");\r\n");
      out.write("        insertMember.name.focus();\r\n");
      out.write("        return false;\r\n");
      out.write("\t} else if(insertMember.nickname.value == \"\") {\r\n");
      out.write("        alert(\"닉네임을 입력해주세요.\");\r\n");
      out.write("        insertMember.nickname.focus();\r\n");
      out.write("        return false;\r\n");
      out.write("\t} else if(insertMember.phone.value == \"\") {\r\n");
      out.write("        alert(\"전화번호를 입력해주세요.\");\r\n");
      out.write("        insertMember.phone.focus();\r\n");
      out.write("        return false;\r\n");
      out.write("\t} else if(insertMember.birth.value == \"\") {\r\n");
      out.write("        alert(\"생년월일을 입력해주세요.\");\r\n");
      out.write("        insertMember.birth.focus();\r\n");
      out.write("        return false;\r\n");
      out.write("\t} else if(insertMember.gender.value == \"\") {\r\n");
      out.write("\t\talert(\"성별을 입력해주세요.\");\r\n");
      out.write("        insertMember.gender.focus();\r\n");
      out.write("        return false;\r\n");
      out.write("\t} else ifinsertMember.address.value == \"\") {\r\n");
      out.write("        alert(\"주소를 입력해주세요.\");\r\n");
      out.write("        insertMember.address.focus();\r\n");
      out.write("        return false;\r\n");
      out.write("\t} else if(insertMember.postcode.value == \"\") {\r\n");
      out.write("        alert(\"우편번호를 입력해주세요.\");\r\n");
      out.write("        insertMember.postcode.focus();\r\n");
      out.write("        return false;\r\n");
      out.write("\t} else \r\n");
      out.write("\t\treturn true;\r\n");
      out.write("    }\r\n");
      out.write("//취소버튼 클릭\r\n");
      out.write("function goMain(){\r\n");
      out.write("     location.href=\"main.jsp\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"/cban/assets/bootstrap-3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
