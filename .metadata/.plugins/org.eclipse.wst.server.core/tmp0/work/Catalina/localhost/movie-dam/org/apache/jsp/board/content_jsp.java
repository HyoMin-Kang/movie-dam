/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2018-09-09 07:37:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import movie.board.BoardDBBean;
import movie.board.BoardDataBean;
import movie.board.CommentDBBean;
import movie.board.CommentDataBean;
import java.text.SimpleDateFormat;
import java.util.List;
import java.sql.*;

public final class content_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("movie.board.BoardDBBean");
    _jspx_imports_classes.add("movie.board.BoardDataBean");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("movie.board.CommentDBBean");
    _jspx_imports_classes.add("movie.board.CommentDataBean");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("utf-8");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    String id = request.getParameter("id");
      id = (String)session.getAttribute("id");
      
   int num = Integer.parseInt(request.getParameter("num"));
   String pageNum = request.getParameter("pageNum");
   

   SimpleDateFormat sdf = 
        new SimpleDateFormat("yyyy-MM-dd HH:mm");
   
   try{
      BoardDBBean dbPro = BoardDBBean.getInstance(); 
      BoardDataBean article =  dbPro.getArticle(num);
  
	  int ref=article.getRef();
	  int re_step=article.getRe_step();
	  int re_level=article.getRe_level();

      out.write("\r\n");
      out.write("<!DOCTYPE html>    \r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/cban/assets/bootstrap-4.1.0/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>  \r\n");
      out.write("<br>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("<div class=\"card text-center\">\r\n");
      out.write("  <div class=\"card-header\">\r\n");
      out.write("    질문과 답변\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"card-body\">\r\n");
      out.write("    <h4 class=\"card-title\"></h4>\r\n");
      out.write("    <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" onclick=\"location.href='board.jsp?pageNum=");
      out.print(pageNum);
      out.write("'\">글목록</button>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<table class=\"table table-bordered\">  \r\n");
      out.write("  <tr>\r\n");
      out.write("    <td>글번호</td>\r\n");
      out.write("    <td colspan=\"2\">\r\n");
      out.write("\t     ");
      out.print(article.getNum());
      out.write("<input type=\"hidden\" id=\"num\" value=\"");
      out.print(article.getNum());
      out.write("\"></td>\r\n");
      out.write("    <td>조회수</td>\r\n");
      out.write("    <td colspan=\"2\">\r\n");
      out.write("\t     ");
      out.print(article.getReadcount());
      out.write("</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr>\r\n");
      out.write("    <td>작성자</td>\r\n");
      out.write("    <td >\r\n");
      out.write("\t     ");
      out.print(article.getWriter());
      out.write("</td>\r\n");
      out.write("\t<td>분류</td>\r\n");
      out.write("    <td>\r\n");
      out.write("\t     a</td>     \r\n");
      out.write("    <td >작성일</td>\r\n");
      out.write("    <td >\r\n");
      out.write("\t     ");
      out.print( sdf.format(article.getReg_date()));
      out.write("</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr>\r\n");
      out.write("    <td>글제목</td>\r\n");
      out.write("    <td colspan=\"5\">\r\n");
      out.write("\t     ");
      out.print(article.getSubject());
      out.write("</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr>\r\n");
      out.write("    <td>글내용</td>\r\n");
      out.write("    <td colspan=\"5\">\r\n");
      out.write("           <pre>");
      out.print(article.getContent());
      out.write("</pre></td>\r\n");
      out.write("  </tr>\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<form action=\"contentPro.jsp\">\r\n");
      out.write("<table class=\"table\" border=\"1\" align=\"center\">\r\n");
      out.write("\r\n");
      out.write("<tr><td colspan=\"3\"align=\"center\"></td></tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"3\" align=\"center\">\r\n");
      out.write("\tcomment\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<input type=\"hidden\" name=\"ref\" value=\"");
      out.print(article.getNum());
      out.write("\">\r\n");
      out.write("<input type=\"hidden\" name=\"pagenum\" value=\"");
      out.print(pageNum);
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("    <tr>\r\n");
      out.write("       <td align=\"center\">");
      out.print(id);
      out.write("</td>\r\n");
      out.write("          <input type=\"hidden\" name=\"id\" value=\"");
      out.print(id);
      out.write("\">\r\n");
      out.write("          <td colspan=\"2\" align=\"right\" style=\"font-size:14px;\">\r\n");
      out.write("          <textarea class=\"form-control\" rows=\"3\" cols=\"160\" name=\"content\" ></textarea>\r\n");
      out.write("          <br><br><input class=\"btn btn-outline-secondary btn-sm\" type=\"submit\" name=\"register\" value=\"리뷰작성\">\r\n");
      out.write("          <input class=\"btn btn-outline-secondary btn-sm\" type=\"reset\" value=\"다시쓰기\">\r\n");
      out.write("       </td>\r\n");
      out.write("    </tr>\r\n");
 

	 ArrayList<CommentDataBean> Contentlist = null;
	  CommentDBBean logon = CommentDBBean.getInstance();
	  Contentlist = logon.getContentlist(num);
	  
	  for(int i=0;i<Contentlist.size();i++) {
	     CommentDataBean content = Contentlist.get(i);
	
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t<td rowspan=2 align=\"center\">a</td>\r\n");
      out.write("\t\t    <td colspan=2  align=\"left\" style=\"font-size:14px;\">\r\n");
      out.write("\t\t       ");
      out.print( content.getId() );
      out.write(' ');
      out.write('(');
      out.write(' ');
      out.print(content.getReg() );
      out.write(" )\r\n");
      out.write("\t\t    </td>\r\n");
      out.write("\t\t\t </tr>\r\n");
      out.write("\t\t\t <tr height=\"75\">\r\n");
      out.write("\t\t\t    <td colspan=2 style=\"font-size:14px;\">\r\n");
      out.write("\t\t\t       ");
      out.print(content.getContent() );
      out.write("\r\n");
      out.write("\t\t\t    </td>\r\n");
      out.write("\t\t \t</tr>\r\n");
      out.write("\r\n");
 
   }
  
   }catch(Exception e){
     
  } 
 
      out.write("\r\n");
      out.write("\r\n");
      out.write(" </table>\r\n");
      out.write(" </form>\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("   \r\n");
      out.write("</div> \r\n");
      out.write("\r\n");
      out.write("     \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
