/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2018-09-15 13:38:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import moviedam.board.ArticleDBBean;
import moviedam.board.ArticleDataBean;
import moviedam.board.CommentDBBean;
import moviedam.board.CommentDataBean;
import java.text.SimpleDateFormat;
import java.util.List;
import java.sql.*;

public final class content_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("moviedam.board.CommentDataBean");
    _jspx_imports_classes.add("moviedam.board.CommentDBBean");
    _jspx_imports_classes.add("moviedam.board.ArticleDataBean");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("moviedam.board.ArticleDBBean");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/cban/assets/bootstrap-4.1.0/css/bootstrap.min.css\">\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");

	request.setCharacterEncoding("utf-8");
	String id = request.getParameter("id");
	id = (String) session.getAttribute("id");

      out.write('\n');
      out.write('\n');

	int article_id = Integer.parseInt(request.getParameter("article_id"));
	String pageNum = request.getParameter("pageNum");

	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");

	try {
		ArticleDBBean dbPro = ArticleDBBean.getInstance();
		ArticleDataBean article = dbPro.getArticle(article_id);

      out.write("\n");
      out.write("\n");
      out.write("\t<br>\n");
      out.write("\t<div class=\"container\">\n");
      out.write("\t\t<div class=\"card text-center\">\n");
      out.write("\t\t\t<div class=\"card-header\">질문과 답변</div>\n");
      out.write("\t\t\t<div class=\"card-body\">\n");
      out.write("\t\t\t\t<h4 class=\"card-title\"></h4>\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-sm btn-outline-secondary\"\n");
      out.write("\t\t\t\t\tonclick=\"location.href='board.jsp?pageNum=");
      out.print(pageNum);
      out.write("'\">글목록</button>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<br>\n");
      out.write("\n");
      out.write("\t\t<table class=\"table table-bordered\">\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>글번호</td>\n");
      out.write("\t\t\t\t<td colspan=\"2\">\n");
      out.write("\t\t\t\t");
      out.print(article.getArticle_id());
      out.write("\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"article_id\" value=\"");
      out.print(article.getArticle_id());
      out.write("\"></td>\n");
      out.write("\t\t\t\t<td>조회수</td>\n");
      out.write("\t\t\t\t<td colspan=\"2\">");
      out.print(article.getArticle_hits());
      out.write("</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>작성자</td>\n");
      out.write("\t\t\t\t<td>");
      out.print(article.getArticle_writer());
      out.write("</td>\n");
      out.write("\t\t\t\t<td>분류</td>\n");
      out.write("\t\t\t\t<td>");
      out.print(article.getCategory());
      out.write("</td>\n");
      out.write("\t\t\t\t<td>작성일</td>\n");
      out.write("\t\t\t\t<td>");
      out.print(sdf.format(article.getReg_date()));
      out.write("</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>글제목</td>\n");
      out.write("\t\t\t\t<td colspan=\"5\">");
      out.print(article.getArticle_title());
      out.write("</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>글내용</td>\n");
      out.write("\t\t\t\t<td colspan=\"5\"><pre>");
      out.print(article.getArticle_content());
      out.write("</pre></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t</table>\n");
      out.write("\n");
      out.write("\t\t<div class=\"container\">\n");
      out.write("\t\t\t<br>\n");
      out.write("\n");
      out.write("\t\t\t<form action=\"contentPro.jsp\">\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"cmt_ref\" value=\"");
      out.print(article.getArticle_id());
      out.write("\">\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"pagenum\" value=\"");
      out.print(pageNum);
      out.write("\"> \n");
      out.write("\t\t\t\t\n");
      out.write("\n");
      out.write("\t\t\t\t<table class=\"table\" border=\"1\" align=\"center\">\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td colspan=\"3\" align=\"center\"></td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td colspan=\"3\" align=\"center\">comment</td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td align=\"center\">\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" size=\"10\" maxlength=\"10\" name=\"cmt_writer\">\n");
      out.write("\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t<td colspan=\"2\" align=\"right\" style=\"font-size: 14px;\">\n");
      out.write("\t\t\t\t\t\t<textarea class=\"form-control\" rows=\"3\" cols=\"160\" name=\"cmt_content\"></textarea>\n");
      out.write("\t\t\t\t\t\t<br>\n");
      out.write("\t\t\t\t\t\t<br>\n");
      out.write("\t\t\t\t\t\t<input class=\"btn btn-outline-secondary btn-sm\" type=\"submit\" name=\"register\" value=\"리뷰작성\"> \n");
      out.write("\t\t\t\t\t\t<input class=\"btn btn-outline-secondary btn-sm\" type=\"reset\" value=\"다시쓰기\"></td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t");

						ArrayList<CommentDataBean> Contentlist = null;
							CommentDBBean logon = CommentDBBean.getInstance();
							Contentlist = logon.getContentlist(article_id);

							for (int i = 0; i < Contentlist.size(); i++) {
								CommentDataBean content = Contentlist.get(i);
					
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td rowspan=2 align=\"center\">img</td>\n");
      out.write("\t\t\t\t\t\t<td colspan=2 align=\"left\" style=\"font-size: 14px;\">\n");
      out.write("\t\t\t\t\t\t\t<b>");
      out.print(content.getCmt_writer());
      out.write("</b> (");
      out.print(content.getCmt_date());
      out.write(")</td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t<tr height=\"75\">\n");
      out.write("\t\t\t\t\t\t<td colspan=2 style=\"font-size: 14px;\">");
      out.print(content.getCmt_content());
      out.write("</td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\n");
      out.write("\t\t\t\t\t");

						}

						} catch (Exception e) {

						}
					
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t</table>\n");
      out.write("\t\t\t</form>\n");
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
